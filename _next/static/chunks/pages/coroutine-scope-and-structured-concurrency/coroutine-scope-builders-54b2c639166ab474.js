(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[628],{9272:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/coroutine-scope-and-structured-concurrency/coroutine-scope-builders",function(){return o(4162)}])},4162:function(e,n,o){"use strict";o.r(n),o.d(n,{__toc:function(){return l}});var c=o(5893),t=o(2673),r=o(373),s=o(8426);o(9128);var i=o(2643);let l=[{depth:2,value:"CoroutineScope 빌더 함수들",id:"coroutinescope-빌더-함수들"},{depth:2,value:"CoroutineScope 빌더 함수들의 종류",id:"coroutinescope-빌더-함수들의-종류"},{depth:2,value:"CoroutineScope 빌더 함수들",id:"coroutinescope-빌더-함수들-1"},{depth:3,value:"launch",id:"launch"},{depth:3,value:"async",id:"async"},{depth:3,value:"withContext",id:"withcontext"},{depth:3,value:"coroutineScope",id:"coroutinescope"},{depth:2,value:"CoroutineScope () 함수",id:"coroutinescope--함수"}];function _createMdxContent(e){let n=Object.assign({h2:"h2",p:"p",code:"code",ul:"ul",li:"li",pre:"pre",span:"span",h3:"h3",blockquote:"blockquote",a:"a"},(0,i.a)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"coroutinescope-빌더-함수들",children:"CoroutineScope 빌더 함수들"}),"\n",(0,c.jsx)(n.h2,{id:"coroutinescope-빌더-함수들의-종류",children:"CoroutineScope 빌더 함수들의 종류"}),"\n",(0,c.jsxs)(n.p,{children:["kotlin-coroutine-core 에서 제공하는 CoroutineScope 를 생성하는 함수들은 아래와 같습니다. ",(0,c.jsx)(n.code,{children:"CoroutineScope.kt"})," 파일 내에 ",(0,c.jsx)(n.code,{children:"CoroutineScope"})," 인터페이스의 확장함수로 추가되어있기도 하고, ",(0,c.jsx)(n.code,{children:"Buidlers.common.kt"})," 내에 함수로 선언되어 있는 경우도 있습니다. 이 함수들을 주로 ",(0,c.jsx)(n.code,{children:"코루틴 빌더"})," 라고 부르기도 합니다."]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"withContext"})," : 코루틴 컨텍스트를 변경하는 함수입니다. 다른 스레드에서 코드를 실행하거나, 특정 디스패처에 작업을 보내는 것이 가능합니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"delay"})," : 일정 시간 동안 코루틴을 일시 중단하는 함수입니다. 주로 테스트나 간단한 딜레이를 구현할 때 사용됩니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"async"}),": 비동기 작업의 결과를 반환하는 코루틴을 생성합니다. 생성된 코루틴은 ",(0,c.jsx)(n.code,{children:"Deferred"})," 객체를 반환하며, 이를 통해 결과를 가져올 수 있습니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"await"}),": Deferred 객체의 결과를 기다리는 함수로, ",(0,c.jsx)(n.code,{children:"async"})," 함수로 생성된 Deferred 객체의 결과를 가져올 때 사용됩니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"launch"}),": 백그라운드에서 비동기적으로 새로운 코루틴을 실행하는 함수로, 반환 값이 없는 Fire-and-forget 스타일의 코루틴을 생성합니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"runBlocking"}),": 새로운 블록 내에서 코루틴을 실행하는 함수로, 주로 메인 함수나 테스트 코드에서 사용되며, 코루틴을 기다리는 동안 블로킹을 유지합니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"coroutineScope"}),": 지정된 블록 내에서 새로운 코루틴 스코프를 생성하는 함수로, 지정된 블록 내의 코루틴이 완료될 때까지 대기합니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"select"}),": 여러 개의 중단 가능한 조건을 동시에 처리할 수 있는 함수로, 먼저 발생하는 이벤트를 처리하고 나머지는 무시합니다."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"supervisorScope"}),": 자식 코루틴이 실패하더라도 부모 코루틴이 중단되지 않도록 하는 슈퍼바이저 스코프를 생성하는 함수로, 자식 코루틴의 실패를 격리합니다."]}),"\n"]}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.p,{children:"이 함수들은 보통 마지막 인자를 람다식으로 받는데, 가장 마지막 인자가 람다식 일 경우 아래와 같이 축약해서 쓰는 것이 가능합니다."}),"\n",(0,c.jsx)(n.pre,{"data-language":"kotlin","data-theme":"default",children:(0,c.jsxs)(n.code,{"data-language":"kotlin","data-theme":"default",children:[(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"launch"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"// ..."})]}),"\n",(0,c.jsx)(n.span,{className:"line",children:(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,c.jsx)(n.p,{children:"우리가 흔히 보는 launch 구문, withContext 구문, async 구문 등은 모두 마지막 인자가 람다식입니다."}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"coroutinescope-빌더-함수들-1",children:"CoroutineScope 빌더 함수들"}),"\n",(0,c.jsx)(n.h3,{id:"launch",children:"launch"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["참고 : ",(0,c.jsx)(n.a,{href:"https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html",children:"CoroutineScope.launch"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["launch 의 마지막 인자인 람다는 Unit 을 반환하기에 launch 내에서 값을 반환할 필요가 없습니다.",(0,c.jsx)("br",{})]}),"\n",(0,c.jsxs)(n.p,{children:["그리고 ",(0,c.jsx)(n.code,{children:"launch {...}"})," 코루틴 빌더는 ",(0,c.jsx)(n.code,{children:"Job"})," 을 리턴합니다.",(0,c.jsx)("br",{})]}),"\n",(0,c.jsx)(n.pre,{"data-language":"kotlin","data-theme":"default",children:(0,c.jsxs)(n.code,{"data-language":"kotlin","data-theme":"default",children:[(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"fun"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineScope"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"."}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"launch"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"("})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    context: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineContext"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" EmptyCoroutineContext, "})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    start: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineStart"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" CoroutineStart.DEFAULT, "})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    block: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"suspend"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineScope"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".() "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"->"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" Unit"})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"): "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"Job"})]})]})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"TODO"}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"async",children:"async"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["참고 : ",(0,c.jsx)(n.a,{href:"https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html",children:"CoroutineScope.async"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["async 는 Deferred 객체를 리턴합니다. 이 Deferred 객체의 작업은 async 의 마지막 인자인 람다 바디를 수행하는 것으로 수행됩니다. 그리고 람다가 반환하는 값인 T 타입의 값을 통해서 작업의 수행결과를 전달받아서 다음 작업을 수행할 수 있습니다.",(0,c.jsx)("br",{})]}),"\n",(0,c.jsx)(n.p,{children:"위에서 살펴본 코루틴 스코프 빌더 launch 는 Job 을 리턴하지만, 코루틴 스코프 빌더 async 는 Deferred 를 리턴한다는 사실을 유념해야 합니다. 물론 Deferred 역시 Job 을 상속받은 하위타입입니다."}),"\n",(0,c.jsx)(n.pre,{"data-language":"kotlin","data-theme":"default",children:(0,c.jsxs)(n.code,{"data-language":"kotlin","data-theme":"default",children:[(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"fun"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" <"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"T"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"> "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineScope"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"."}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"async"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"("})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    context: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineContext"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" EmptyCoroutineContext, "})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    start: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineStart"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" CoroutineStart.DEFAULT, "})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    block: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"suspend"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineScope"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".() "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"->"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" T"})]}),"\n",(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"): "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"Deferred"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"<"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"T"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:">"})]})]})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"TODO"}),"\n"]}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h3,{id:"withcontext",children:"withContext"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["참고 : ",(0,c.jsx)(n.a,{href:"https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html",children:"withContext"})]}),"\n"]}),"\n",(0,c.jsx)(n.pre,{"data-language":"kotlin","data-theme":"default",children:(0,c.jsx)(n.code,{"data-language":"kotlin","data-theme":"default",children:(0,c.jsxs)(n.span,{className:"line",children:[(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"suspend"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"fun"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" <"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"T"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"> "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"withContext"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"(context: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineContext"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:", block: "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"suspend"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"CoroutineScope"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".() "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"->"}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" T): "}),(0,c.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"T"})]})})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"TODO"}),"\n"]}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h3,{id:"coroutinescope",children:"coroutineScope"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"TODO"}),"\n"]}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"coroutinescope--함수",children:"CoroutineScope () 함수"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"TODO"}),"\n"]})]})}let a={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.a)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/coroutine-scope-and-structured-concurrency/coroutine-scope-builders.mdx",route:"/coroutine-scope-and-structured-concurrency/coroutine-scope-builders",timestamp:17107534e5,pageMap:[{kind:"MdxPage",name:"channel",route:"/channel"},{kind:"Folder",name:"coroutine-context",route:"/coroutine-context",children:[{kind:"MdxPage",name:"coroutine-context-types-features-and-uml",route:"/coroutine-context/coroutine-context-types-features-and-uml"},{kind:"MdxPage",name:"coroutine-exception-handler",route:"/coroutine-context/coroutine-exception-handler"},{kind:"MdxPage",name:"what-is-coroutine-context",route:"/coroutine-context/what-is-coroutine-context"},{kind:"Meta",data:{intro:"Intro","what-is-coroutine-context":"CoroutineContext","coroutine-context-types-features-and-uml":"CoroutineContext 의 종류, 특징, UML","coroutine-exception-handler":"CoroutineExceptionHandler"}}]},{kind:"MdxPage",name:"coroutine-context",route:"/coroutine-context"},{kind:"Folder",name:"coroutine-dispatcher",route:"/coroutine-dispatcher",children:[{kind:"MdxPage",name:"what-is-coroutine-dispatcher",route:"/coroutine-dispatcher/what-is-coroutine-dispatcher"},{kind:"Meta",data:{"what-is-coroutine-dispatcher":"CoroutineDispatcer"}}]},{kind:"MdxPage",name:"coroutine-dispatcher",route:"/coroutine-dispatcher"},{kind:"Folder",name:"coroutine-scope-and-structured-concurrency",route:"/coroutine-scope-and-structured-concurrency",children:[{kind:"MdxPage",name:"coroutine-scope-builders",route:"/coroutine-scope-and-structured-concurrency/coroutine-scope-builders"},{kind:"MdxPage",name:"coroutine",route:"/coroutine-scope-and-structured-concurrency/coroutine"},{kind:"MdxPage",name:"structured-concurrency",route:"/coroutine-scope-and-structured-concurrency/structured-concurrency"},{kind:"MdxPage",name:"what-is-coroutine-scope",route:"/coroutine-scope-and-structured-concurrency/what-is-coroutine-scope"},{kind:"Meta",data:{intro:"Intro","what-is-coroutine-scope":"CoroutineScope","structured-concurrency":"Structured Concurrency","coroutine-scope-builders":"CoroutineScope 빌더 함수들",coroutine:"Coroutine"}}]},{kind:"MdxPage",name:"coroutine-scope-and-structured-concurrency",route:"/coroutine-scope-and-structured-concurrency"},{kind:"MdxPage",name:"coroutine-useful-case",route:"/coroutine-useful-case"},{kind:"Folder",name:"exception-handler-and-job-cancelling",route:"/exception-handler-and-job-cancelling",children:[{kind:"MdxPage",name:"exception-handler",route:"/exception-handler-and-job-cancelling/exception-handler"},{kind:"MdxPage",name:"job-cancelling",route:"/exception-handler-and-job-cancelling/job-cancelling"},{kind:"Meta",data:{intro:"Intro","exception-handler":"Exception Handler","job-cancelling":"Job Cancelling"}}]},{kind:"MdxPage",name:"exception-handler-and-job-cancelling",route:"/exception-handler-and-job-cancelling"},{kind:"MdxPage",name:"flow",route:"/flow"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"kotlin-basic",route:"/kotlin-basic"},{kind:"Folder",name:"suspend-and-fsm-cps",route:"/suspend-and-fsm-cps",children:[{kind:"MdxPage",name:"fsm-and-cps",route:"/suspend-and-fsm-cps/fsm-and-cps"},{kind:"MdxPage",name:"to-coroutine",route:"/suspend-and-fsm-cps/to-coroutine"},{kind:"MdxPage",name:"what-is-suspend-function",route:"/suspend-and-fsm-cps/what-is-suspend-function"},{kind:"Meta",data:{"what-is-suspend-function":"suspend 함수","fsm-and-cps":"FSM, CPS","to-coroutine":"코루틴 코드로 바꿔보면"}}]},{kind:"MdxPage",name:"suspend-and-fsm-cps",route:"/suspend-and-fsm-cps"},{kind:"Meta",data:{index:"Introduction","coroutine-useful-case":"코루틴 사용이 더 나은 경우들","suspend-and-fsm-cps":"suspend 함수와 FSM,CPS","coroutine-context":"CoroutineContext","coroutine-dispatcher":"CoroutineDispatcher","coroutine-scope-and-structured-concurrency":"CoroutineScope, Structured Concurrency","exception-handler-and-job-cancelling":"Exception Handler, Job Cancel",flow:"Flow",channel:"Channel","kotlin-basic":"코틀린 기초",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Coroutine Scope Builders",headings:l},pageNextRoute:"/coroutine-scope-and-structured-concurrency/coroutine-scope-builders",nextraLayout:r.ZP,themeConfig:s.Z};n.default=(0,t.j)(a)},8426:function(e,n,o){"use strict";var c=o(5893);o(7294);let t={logo:(0,c.jsx)("span",{children:"Docs Kotlin Coroutine"}),project:{link:"https://github.com/chagchagchag/docs-kotlin-coroutine"},docsRepositoryBase:"https://github.com/chagchagchag/docs-kotlin-coroutine",footer:{text:"Nextra Docs Template"}};n.Z=t},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=9272)}),_N_E=e.O()}]);