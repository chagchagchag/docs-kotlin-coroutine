(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[90],{3957:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/suspend-and-fsm-cps/what-is-suspend-function",function(){return s(315)}])},315:function(n,e,s){"use strict";s.r(e),s.d(e,{__toc:function(){return c}});var d=s(5893),t=s(2673),o=s(373),i=s(8426);s(9128);var r=s(2643);let c=[{depth:2,value:"suspend 함수",id:"suspend-함수"},{depth:2,value:"코틀린의 코루틴, 그리고 suspend",id:"코틀린의-코루틴-그리고-suspend"},{depth:2,value:"suspend 기반의 kotlin 내장 함수들",id:"suspend-기반의-kotlin-내장-함수들"},{depth:2,value:"FSM, CPS 와 suspend 함수",id:"fsm-cps-와-suspend-함수"},{depth:2,value:"suspend 함수는 suspend 함수에서만 호출 가능",id:"suspend-함수는-suspend-함수에서만-호출-가능"},{depth:3,value:"Spring Webflux 의 에서는 suspend 를 지원",id:"spring-webflux-의-에서는-suspend-를-지원"},{depth:3,value:"Mono, CompletableFuture 를 반환하는 라이브러리 함수가 suspend 함수가 아닐 경우",id:"mono-completablefuture-를-반환하는-라이브러리-함수가-suspend-함수가-아닐-경우"}];function _createMdxContent(n){let e=Object.assign({h2:"h2",p:"p",ul:"ul",li:"li",strong:"strong",code:"code",h3:"h3"},(0,r.a)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.h2,{id:"suspend-함수",children:"suspend 함수"}),"\n",(0,d.jsx)(e.h2,{id:"코틀린의-코루틴-그리고-suspend",children:"코틀린의 코루틴, 그리고 suspend"}),"\n",(0,d.jsxs)(e.p,{children:["코틀린 코루틴은 비동기 프로그래밍을 위한 강력한 도구입니다.",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(e.p,{children:["코루틴은 코드의 일부를 일시 중단하고 나중에 재개할 수 있는 경량 스레드로 볼 수 있습니다. suspend 함수는 이러한 코루틴을 구현하는 데 중요한 역할을 합니다. 보통 suspend 라는 키워드를 함수 앞에 붙여서 suspend 함수로 선언합니다. 이렇게 하면 컴파일러가 suspend 가 붙은 함수를 코루틴 내에서 사용할 수 있는 함수로 인식합니다. 코루틴 내에서 일시 중단이 가능한 모든 작업은 반드시 suspend 함수 에서 수행되어야 합니다.",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(e.p,{children:["suspend 함수의 주요 특징은 아래와 같습니다.",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["suspend 함수는 일시 중단할 수 있는 함수입니다.","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["suspend 가 적용된 함수가 실행되는 동안 일시 중단될 경우, suspend 를 실행하는 동안 내부적으로는 다른 작업을 수행하거나 대기하게 됩니다. 즉, ",(0,d.jsx)(e.strong,{children:"논블로킹"})," 기반으로 동작합니다. suspend 함수를 호출할 때에는 이 suspend 함수를 호출한 코루틴이 일시 중단됩니다."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["suspend 함수를 사용하면 비동기적인 작업을 수행하는 동안 UI를 블로킹하지 않고도 작업을 수행할 수 있습니다.","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"예를 들어 네트워크 호출이나 파일 I/O와 같은 작업을 수행할 때 suspend 함수를 사용하여 코루틴을 일시 중단하고 나중에 결과를 받아서 처리할 수 있습니다."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)("br",{}),"\n",(0,d.jsx)(e.h2,{id:"suspend-기반의-kotlin-내장-함수들",children:"suspend 기반의 kotlin 내장 함수들"}),"\n",(0,d.jsxs)(e.p,{children:["코틀린의 ",(0,d.jsx)(e.code,{children:"kotlinx-coroutines-core"})," 에서 제공하는 suspend 가 적용된 함수들은 아래와 같습니다."]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"withContext"})," : 코루틴 컨텍스트를 변경하는 함수입니다. 다른 스레드에서 코드를 실행하거나, 특정 디스패처에 작업을 보내는 것이 가능합니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"delay"})," : 일정 시간 동안 코루틴을 일시 중단하는 함수입니다. 주로 테스트나 간단한 딜레이를 구현할 때 사용됩니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"await"}),": Deferred 객체의 결과를 기다리는 함수로, ",(0,d.jsx)(e.code,{children:"async"})," 함수로 생성된 Deferred 객체의 결과를 가져올 때 사용됩니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"launch"}),": 백그라운드에서 비동기적으로 새로운 코루틴을 실행하는 함수로, 반환 값이 없는 Fire-and-forget 스타일의 코루틴을 생성합니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"runBlocking"}),": 새로운 블록 내에서 코루틴을 실행하는 함수로, 주로 메인 함수나 테스트 코드에서 사용되며, 코루틴을 기다리는 동안 블로킹을 유지합니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"coroutineScope"}),": 지정된 블록 내에서 새로운 코루틴 스코프를 생성하는 함수로, 지정된 블록 내의 코루틴이 완료될 때까지 대기합니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"select"}),": 여러 개의 중단 가능한 조건을 동시에 처리할 수 있는 함수로, 먼저 발생하는 이벤트를 처리하고 나머지는 무시합니다."]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"supervisorScope"}),": 자식 코루틴이 실패하더라도 부모 코루틴이 중단되지 않도록 하는 슈퍼바이저 스코프를 생성하는 함수로, 자식 코루틴의 실패를 격리합니다."]}),"\n"]}),"\n",(0,d.jsx)("br",{}),"\n",(0,d.jsx)(e.h2,{id:"fsm-cps-와-suspend-함수",children:"FSM, CPS 와 suspend 함수"}),"\n",(0,d.jsx)("br",{}),"\n",(0,d.jsx)(e.h2,{id:"suspend-함수는-suspend-함수에서만-호출-가능",children:"suspend 함수는 suspend 함수에서만 호출 가능"}),"\n",(0,d.jsx)(e.h3,{id:"spring-webflux-의-에서는-suspend-를-지원",children:"Spring Webflux 의 에서는 suspend 를 지원"}),"\n",(0,d.jsx)(e.h3,{id:"mono-completablefuture-를-반환하는-라이브러리-함수가-suspend-함수가-아닐-경우",children:"Mono, CompletableFuture 를 반환하는 라이브러리 함수가 suspend 함수가 아닐 경우"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"kotlin-coroutines-reactor"})}),"\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"CoroutineScope(CoroutineDispatcher).future { ... }"})}),"\n"]})]})}let u={MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.a)(),n.components);return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(_createMdxContent,{...n})}):_createMdxContent(n)},pageOpts:{filePath:"pages/suspend-and-fsm-cps/what-is-suspend-function.mdx",route:"/suspend-and-fsm-cps/what-is-suspend-function",timestamp:1710482822e3,pageMap:[{kind:"Folder",name:"channel",route:"/channel",children:[{kind:"MdxPage",name:"intro",route:"/channel/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Folder",name:"coroutine-context",route:"/coroutine-context",children:[{kind:"MdxPage",name:"intro",route:"/coroutine-context/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Folder",name:"coroutine-dispatcher",route:"/coroutine-dispatcher",children:[{kind:"MdxPage",name:"intro",route:"/coroutine-dispatcher/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Folder",name:"coroutine-scope-and-structured-concurrency",route:"/coroutine-scope-and-structured-concurrency",children:[{kind:"MdxPage",name:"intro",route:"/coroutine-scope-and-structured-concurrency/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Folder",name:"coroutine-useful-case",route:"/coroutine-useful-case",children:[{kind:"MdxPage",name:"intro",route:"/coroutine-useful-case/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Folder",name:"flow",route:"/flow",children:[{kind:"MdxPage",name:"intro",route:"/flow/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"kotlin-basic",route:"/kotlin-basic",children:[{kind:"MdxPage",name:"intro",route:"/kotlin-basic/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Folder",name:"suspend-and-fsm-cps",route:"/suspend-and-fsm-cps",children:[{kind:"MdxPage",name:"fsm-and-cps",route:"/suspend-and-fsm-cps/fsm-and-cps"},{kind:"MdxPage",name:"to-coroutine",route:"/suspend-and-fsm-cps/to-coroutine"},{kind:"MdxPage",name:"what-is-suspend-function",route:"/suspend-and-fsm-cps/what-is-suspend-function"},{kind:"Meta",data:{"what-is-suspend-function":"suspend() 함수","fsm-and-cps":"FSM, CPS","to-coroutine":"코루틴 코드로 바꿔보면"}}]},{kind:"Meta",data:{index:"Introduction","coroutine-useful-case":"코루틴 사용이 더 나은 경우들","suspend-and-fsm-cps":"suspend 함수와 FSM,CPS","coroutine-context":"CoroutineContext","coroutine-dispatcher":"CoroutineDispatcher","coroutine-scope-and-structured-concurrency":"CoroutineScope, Structured Concurrency",flow:"Flow",channel:"Channel","kotlin-basic":"코틀린 기초",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"What Is Suspend Function",headings:c},pageNextRoute:"/suspend-and-fsm-cps/what-is-suspend-function",nextraLayout:o.ZP,themeConfig:i.Z};e.default=(0,t.j)(u)},8426:function(n,e,s){"use strict";var d=s(5893);s(7294);let t={logo:(0,d.jsx)("span",{children:"Docs Kotlin Coroutine"}),project:{link:"https://github.com/chagchagchag/docs-kotlin-coroutine"},docsRepositoryBase:"https://github.com/chagchagchag/docs-kotlin-coroutine",footer:{text:"Nextra Docs Template"}};e.Z=t},5789:function(){}},function(n){n.O(0,[774,796,888,179],function(){return n(n.s=3957)}),_N_E=n.O()}]);